---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment-1
  labels:
    app: nginx
spec:
  replicas: 3  # Number of desired replicas
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: nginx
              topologyKey: "kubernetes.io/hostname"  # Schedule on different nodes
      initContainers:
      - name: init-myservice
        image: busybox
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name  # Pod name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace  # Namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName  # Node name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP  # Pod IP
        command: ['sh', '-c', 'printf "<html><body><pre>Pod: $POD_NAME \n Node: $NODE_NAME \n Namespace: $POD_NAMESPACE \n IP: $POD_IP \n</pre></body></html>" > /mnt/data/index.html']
        volumeMounts:
        - name: nginx-html
          mountPath: /mnt/data
      containers:
      - name: nginx
        image: nginx:latest  # Use the latest version of NGINX
        ports:
        - containerPort: 80  # Expose port 80
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name  # Pod name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace  # Namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName  # Node name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP  # Pod IP
        volumeMounts:
        - name: nginx-html
          mountPath: /usr/share/nginx/html/
      volumes:
      - name: nginx-html
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-1:310565977883:certificate/31eff6ce-e76c-484a-bca3-676491e24bc5
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443" 
spec:
  type: LoadBalancer  # Expose the service externally
  ports:
  - port: 80         # Service port
    targetPort: 80   # Container port
    name: http
  - port: 443
    targetPort: 80
    name: https
  selector:
    app: nginx

